function lab_03()

% Параметры импульсов
T = 2.0;            % для прямоугольного импульса шаг от 0 влево и вправо
A = 1.0;            % амплитуда
sigma = 1.0;        % параметр гауссовкого распеределения

% Границы расчета
mult = 5;               % левая и правая граница графика
step = 0.05;            % шаг расчета
t = -mult:step:mult;    % вектор оси x

% прямоугольный импульс
function y = rectpls(x,T,A)
    y = zeros(size(x));
    y(abs(x) - T < 0) = A;  % на интервале (-T, T) значение импульса A
    y(abs(x) == T) = A/2;   % в точках T и -T значение импульса A / 2
end

% Гауссов импульс
function y = gauspls(x,A,s)
	y = A * exp(-(x/s).^2); % формула из первой лр
end

% Генерация импульсов
x1 = [rectpls(t,T,A) zeros(1,length(t))];           % zeros(1,length(t)) -- дополнить массив 0 до размера t (см условие, пункт 1)
x2 = [gauspls(t,A,sigma) zeros(1,length(t))];
x3 = [rectpls(t,T/2,A/2) zeros(1,length(t))];
x4 = [gauspls(t,A/2,sigma/2) zeros(1,length(t))];

% Свертка
% Фурье-образ свертки равен произведению фурье-образов функций
% ifft - обратное преобразование Фурье
% fft - быстрое преобразование Фурье
% step помогает сохранить энергию и обеспечить правильный масштаб результатов свертки
y1 = ifft(fft(x1).*fft(x2))*step;       % прямоугольное * гауссовское
y2 = ifft(fft(x1).*fft(x3))*step;       % прямоугольное * прямоугольное
y3 = ifft(fft(x2).*fft(x4))*step;       % гауссовское * гауссовское

% Нормализовать свертку
% (обрезать свертку y1, чтобы она соответствовала по размеру массиву
% времени t)
start = fix((length(y1)-length(t))/2);
y1 = y1(start+1:start+length(t));
y2 = y2(start+1:start+length(t));
y3 = y3(start+1:start+length(t));


figure(1);
plot(t,x1(1:201),'m',t,x2(1:201),'g',t,y1);
title('Прямоугольная и Гауссова свертка');
legend('П','Г','Свертка');

figure(2);
plot(t,x1(1:201),'m',t,x3(1:201),'g',t,y2);
title('Две прямоугольные свертки');
legend('П1','П2','Свертка');

figure(3);
plot(t,x2(1:201),'m',t,x4(1:201),'g',t,y3);
title('Две Гауссовы свертки');
legend('Г1','Г2','Свертка');
end
